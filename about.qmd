---
title: "Cheat Sheet"
---

# R Basics and Vectors

## Creation and Naming

-   `c()`: Combines elements into a vector.
-   `names()`: Assigns names to vector elements for easier indexing.

```{r}
days <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
my_calories <- c(100, 120, 200, 150, 140)
names(my_calories) <- days # Assigns names to the elements in the 'my_calories' vector
```

This code creates two vectors: one for days and one for calorie count. It then assigns the names of the days as labels for the calorie counts.

## Vector Operations

### Indexing

-   By position: `my_calories[1]` retrieves the first element.
-   By name: `my_calories["Monday"]` retrieves the element named "Monday".
-   By range: `my_calories[1:3]` retrieves the first three elements.

```{r}
first_three_days <- my_calories[1:3] # Selects the first three elements
my_calories_monday <- my_calories["Monday"] # Selects the element named "Monday"
```

This demonstrates how to retrieve specific elements from a vector, either by their position or by their assigned names.

### Conditional Indexing

-   `my_calories[my_calories >= 150]` retrieves elements meeting the condition.

```{r}
my_good_days <- my_calories[my_calories >= 150] # Selects days with calorie counts of 150 or more
```

This is used to create a subset of `my_calories` where the condition (calories >= 150) is true.

## Vector Merging

The `c()` function is used again to merge two separate vectors into a single vector.

-   `my_friends_calories <- c(200, 130, 100, 170, 150)`
-   `all_calories <- c(my_calories, my_friends_calories)`: Combines two vectors into one.

# Matrices

## Creation

-   `matrix()`: Creates a matrix from the provided vector.
-   `ncol`, `by_row`: Specifies the number of columns and whether to fill the matrix by rows.

## Naming

-   `rownames()`, `colnames()`: Assigns names to the rows and columns of a matrix.

# Factors

## Factor Creation

-   `as.factor()`: Converts a vector into a factor, useful for categorical data.
-   `levels`: Specifies the levels of the factor.

# Data Frames

## Creation

-   `data.frame()`: Combines vectors into a data frame, columns must be of equal length.

## Indexing and Retrieval

-   `my_data_frame[1:3, 1]`: Indexes specific rows and columns.
-   `my_data_frame$my_calories`: Retrieves a column as a vector.
-   `rownames()`: Assigns names to the rows of the data frame.

## Conditional Retrieval

-   `murders[murders$region == "South", ]`: Retrieves rows based on a condition.

# ggplot for Data Visualization

## Plot Types

-   `geom_histogram()`: Creates a histogram.
-   `geom_point()`: Creates a scatter plot.
-   `geom_bar()`: Creates a bar plot.

## Enhancements

-   Labels and Colors: `geom_label()`, coloring by `color=region`.
-   Scaling: `scale_x_continuous()`, `scale_y_continuous()` for logarithmic transformations.
-   Titles and Labels: `xlab()`, `ggtitle()` for custom labels and titles.

# Statistical Summaries

## Summary Functions

-   `summary()`: Provides a full summary of a variable.
-   `mean()`: Calculates the mean of a variable.
-   `tapply()`: Applies a function (like `summary`) over subsets of a vector, indexed by some other vector (like regions).
